{% extends 'base.html.twig' %}

{% block body %}
    <div class="container mx-auto p-6">
        <h1 class="text-3xl font-bold mb-6">{{ 'pizza.create_new'|trans }}</h1>

        {{ form_start(form, {'attr': {'class': 'bg-white shadow-md rounded-lg p-6'}}) }}
        <div class="space-y-4">
            {{ form_row(form.name, {'attr': {'class': 'w-full p-2 border rounded-lg'}}) }}
            {{ form_row(form.price, {'attr': {'class': 'w-full p-2 border rounded-lg'}}) }}
            {{ form_row(form.size, {'attr': {'class': 'w-full p-2 border rounded-lg'}}) }}

            {# Renderujemy dynamiczną kolekcję składników (toppings) #}
            <div id="toppings-container"
                 data-prototype="{{ form_widget(form.toppings.vars.prototype)|e('html_attr') }}"
                 data-index="{{ form.toppings|length }}">
                {{ form_label(form.toppings) }}
                {% for toppingField in form.toppings %}
                    <div class="topping-item mb-2">
                        {{ form_widget(toppingField) }}
                        <button type="button" class="remove-topping bg-red-500 text-white px-2 py-1 rounded-lg ml-2">Remove</button>
                    </div>
                {% endfor %}
            </div>
        </div>

        <button type="submit" class="mt-4 px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-700">
            {{ button_label|default('Save') }}
        </button>

        {{ form_end(form) }}

        <div class="mt-4">
            <a href="{{ path('pizza_index') }}" class="text-blue-500 hover:underline">
                {{ 'actions.back_to_list'|trans }}
            </a>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const collectionHolder = document.getElementById('toppings-container');
            const addButton = document.createElement('button');
            addButton.innerText = 'Add Topping';
            addButton.className = 'bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-700 mt-4';
            collectionHolder.appendChild(addButton);

            // Inicjujemy domyślny index (liczba istniejących elementów)
            let index = parseInt(collectionHolder.dataset.index, 10) || 0;

            // Obsługa dynamicznego dodawania składników
            addButton.addEventListener('click', function (e) {
                e.preventDefault();

                // Pobieramy prototyp i zastępujemy "__name__" aktualnym indeksem
                const prototype = collectionHolder.dataset.prototype;
                const newForm = prototype.replace(/__name__/g, index);

                // Tworzymy nowy element i dodajemy do kontenera
                const newElement = document.createElement('div');
                newElement.classList.add('topping-item', 'mb-2');
                newElement.innerHTML = newForm;

                // Dodaj przycisk usunięcia dla każdego nowego elementu
                const removeButton = document.createElement('button');
                removeButton.type = 'button';
                removeButton.innerText = 'Remove';
                removeButton.className = 'remove-topping bg-red-500 text-white px-2 py-1 rounded-lg ml-2';

                // Usuwamy składnik po kliknięciu "Remove"
                removeButton.addEventListener('click', function () {
                    newElement.remove();
                });

                newElement.appendChild(removeButton);
                collectionHolder.appendChild(newElement);

                // Zwiększamy indeks
                index++;
                collectionHolder.dataset.index = index.toString();
            });

            // Dodaj obsługę usuwania istniejących elementów
            collectionHolder.querySelectorAll('.remove-topping').forEach(function (button) {
                button.addEventListener('click', function () {
                    button.closest('.topping-item').remove();
                });
            });
        });
    </script>
{% endblock %}